@mixin transition($time: 0.3s, $delay-timing: 0) {
  transition-delay: $delay-timing;
  transition-property: all;
  transition-duration: $time;
  transition-timing-function: ease-in-out;
}

@mixin transition-linear($time:0.3s,$delay-timing:0) {
  transition-delay: $delay-timing;
  transition-property: all;
  transition-duration: $time;
  transition-timing-function: linear;
}

@mixin transition-object($object: all) {
  transition-property: $object;
}

@mixin transition-cubic($time:1s) {
  transition:all $time cubic-bezier(.23,-0.19,.74,1.17);
}

@mixin translate($translateY, $translateX) {
  transform: translate($translateY , $translateX);
}

@mixin translateY($translateY) {
  transform: translateY($translateY);
}

@mixin translateZ($translateZ) {
  transform: translateZ($translateZ);
}

@mixin origin($origin: 0% 0%) {
  transform-origin: $origin;
}

@mixin rotate($deg) {
  transform: rotate($deg);
}

@mixin blur($blur:5px) {
  filter: blur($blur);
}

// .css-scroll(#505050,#0e0e0e);
@mixin css-scroll($bg,$color) {
  &::-webkit-scrollbar {
    width: 4px;
    background: $bg;
  }
  &::-webkit-scrollbar-thumb  {
    background: $color;
    width: 4px;
    -webkit-box-shadow: inset 0 0 0 1px $bg;
    -moz-box-shadow: inset 0 0 0 1px $bg;
    box-shadow: inset 0 0 0 1px $bg;
  }
}

@mixin rotateY($deg) {
  transform: rotateY($deg);
}

@mixin rotateX($deg) {
  transform: rotateX($deg);
}

@mixin background-gradient($start, $stop) {
  background: mix($start, $stop, 50%);
  background: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
  background: -webkit-linear-gradient(bottom, $start, $stop);
  background:    -moz-linear-gradient(bottom, $start, $stop);
  background:      -o-linear-gradient(bottom, $start, $stop);
  background:         linear-gradient(to top, $start, $stop);
}

@mixin translateX($translateX) {
  transform: translateX($translateX);
}

@mixin skewY($value){
transform: skewY($value);
}

@mixin bxs($h,$v,$b,$color) {
  box-shadow: $h $v $b $color;
}

@mixin bd($bd-h:1px,$type-bd:solid,$color-bd:#000,) {
  border: $bd-h $type-bd $color-bd;
}

@mixin scale($scale-val) {
  transform: scale($scale-val);
}

@mixin button($w,$lh:45px,$bg:#3498db,$color:#fff,$color-bxs: none,$radius:3px,$h:4px,$v:4px,$b:0px,) {
  background: $bg;
  @include bxs($h,$v,$b,$color-bxs);
  color: $color !important;
  line-height: $lh;
  border-radius: $radius;
  display: block;
  text-align: center;
  width: $w;
  height: $lh;
}

//@mixin longShadow($color, $size, $spread: 100, $flag: 1, $tmp: '') when ($size > 0) {
//  $percent: round($flag / $size * 5) * $spread;
//  $shadowColor: fade($color, $percent);
//  $shadow: ~"-${size}px ${size}px 1px ${shadowColor}";
//  $ends: ~"${shadow}, ${tmp}";
//  $shadowString: ~"${ends} 0px 0px 0px rgba(0,0,0,0.075)";
//
//  .longShadowLoop($string, $index) when ($index < 1) {
//  text-shadow: $string;
//}
//
//  .longShadowLoop($shadowString, $size - 1);
//  .longShadow($color, $size - 1, $spread, $flag + 1, $ends);
//}

//@mixin longBoxShadow($color, $size, $spread: 100, $flag: 1, $tmp: '') when ($size > 0) {
//  $percent: round($flag / $size * 5) * $spread;
//  $shadowColor: fade($color, $percent);
//  $shadow: ~"-${size}px ${size}px 1px ${shadowColor}";
//  $ends: ~"${shadow}, ${tmp}";
//  $shadowString: ~"${ends} 0px 0px 0px rgba(0,0,0,0.075)";
//
//  .longShadowLoop($string, $index) when ($index < 1) {
//  box-shadow: $string;
//}
//
//  .longShadowLoop($shadowString, $size - 1);
//  .longBoxShadow($color, $size - 1, $spread, $flag + 1, $ends);
//}
